{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","data/buttonsOptions.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","className","s","section","title","this","props","children","Component","BUTTONS_OPTIONS","FeedbackButton","feedback","onLeaveFeedback","type","optionButton","data-feedback","onClick","FeedbackOptions","options","map","option","index","Notification","message","Statistics","total","listItems","good","neutral","bad","positivePercentage","App","state","handleOptions","target","dataset","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,aAAe,wC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,gC,mLCmBfC,E,uKAdX,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,SAAyBC,KAAKC,MAAMF,QACnCC,KAAKC,MAAMC,gB,GALEC,aCJTC,EAAkB,CAAC,OAAQ,UAAW,O,iBCG7CC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBACEC,KAAK,SACLZ,UAAWC,IAAEY,aACbC,gBAAeJ,EACfK,QAASJ,EAJX,SAMGD,KAoBQM,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAClC,OAAOM,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,cAAC,EAAD,CAEEV,SAAUS,EACVR,gBAAiBA,GAFZS,OCXIC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,iBC+B3BC,E,uKA1BX,OACE,mCACwB,IAArBnB,KAAKC,MAAMmB,MACV,cAAC,EAAD,CAAcF,QAAQ,sBAEtB,qBAAItB,UAAWC,IAAEwB,UAAjB,UACE,wCAAWrB,KAAKC,MAAMqB,QACtB,2CAActB,KAAKC,MAAMsB,WACzB,uCAAUvB,KAAKC,MAAMuB,OACrB,yCAAYxB,KAAKC,MAAMmB,SACvB,qDAAwBpB,KAAKC,MAAMwB,mBAAnC,iB,GAZatB,aCwDVuB,G,kNArDbC,MAAQ,CACNL,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,cAAgB,YAAiB,IACvBtB,EADsB,EAAbuB,OACWC,QAApBxB,SACR,EAAKyB,SAAL,eACGzB,EAAW,EAAKqB,MAAMrB,GAAY,K,EAIvC0B,mBAAqB,WAAO,IAAD,EACM,EAAKL,MAEpC,OAHyB,EACjBL,KADiB,EACXC,QADW,EACFC,K,EAKzBS,gCAAkC,WAAO,IAC/BX,EAAS,EAAKK,MAAdL,KAER,OAAOY,KAAKC,MAAc,IAAPb,EAAc,EAAKU,sBAAwB,I,uDAGtD,IAAD,EACwBhC,KAAK2B,MAA5BL,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBJ,EAAQpB,KAAKgC,qBACbC,EAAkCjC,KAAKiC,kCACvC1B,EAAkBP,KAAK4B,cAE7B,OACE,gCACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAAST,EACTG,gBAAiBA,MAGrB,cAAC,EAAD,CAASR,MAAM,aAAf,SACE,cAAC,EAAD,CACEuB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,MAAOA,EACPK,mBAAoBQ,a,GA9Cd9B,cCFlBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44482a92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__29w3V\",\"title\":\"Section_title__3Xqjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton\":\"FeedbackOptions_optionButton__1iiFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItems\":\"Statistics_listItems__1cGsy\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../../components/Section/Section.module.css';\n\nclass Section extends Component {\n  render() {\n    return (\n      <section className={s.section}>\n        <h2 className={s.title}>{this.props.title}</h2>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","export const BUTTONS_OPTIONS = ['good', 'neutral', 'bad'];\n","import PropTypes from 'prop-types';\nimport s from '../../components/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      type=\"button\"\n      className={s.optionButton}\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option, index) => (\n    <FeedbackButton\n      key={index}\n      feedback={option}\n      onLeaveFeedback={onLeaveFeedback}\n    />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport s from '../../components/Statistics/Statistics.module.css';\n\nclass Statistics extends Component {\n  render() {\n    return (\n      <>\n        {this.props.total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <ul className={s.listItems}>\n            <li>Good: {this.props.good}</li>\n            <li>Neutral: {this.props.neutral}</li>\n            <li>Bad: {this.props.bad}</li>\n            <li>Total: {this.props.total}</li>\n            <li>Positive feedback: {this.props.positivePercentage} %</li>\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport { BUTTONS_OPTIONS } from './data/buttonsOptions';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleOptions = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState({\n      [feedback]: this.state[feedback] + 1,\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    return Math.round((good * 100) / this.countTotalFeedback() || 0);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    const onLeaveFeedback = this.handleOptions;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={BUTTONS_OPTIONS}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}