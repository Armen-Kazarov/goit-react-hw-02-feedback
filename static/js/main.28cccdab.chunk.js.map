{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","data/buttonsOptions.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","BUTTONS_OPTIONS","FeedbackButton","feedback","onLeaveFeedback","type","optionButton","data-feedback","onClick","FeedbackOptions","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","listItems","App","state","handleOptions","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,aAAe,wC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,gC,uLCgBfC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,MCPMI,EAAkB,CAAC,OAAQ,UAAW,O,gBCG7CC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBACEC,KAAK,SACLP,UAAWC,IAAEO,aACbC,gBAAeJ,EACfK,QAASJ,EAJX,SAMGD,KAgBQM,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAClC,OAAOM,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAAgBT,SAAUS,EAAQR,gBAAiBA,QCVxCS,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBC4B3BC,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACa,IAAVD,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,qBAAIhB,UAAWC,IAAEsB,UAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,cC8CKE,G,kNArDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,cAAgB,YAAiB,IACvBrB,EADsB,EAAbsB,OACWC,QAApBvB,SACR,EAAKwB,UAAS,SAAAC,GAAS,sBACpBzB,EAAWyB,EAAUzB,GAAY,O,EAItC0B,mBAAqB,WAAO,IAAD,EACM,EAAKN,MAEpC,OAHyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAKzBY,gCAAkC,WAAO,IAAD,EACP,EAAKP,MAA5BP,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,QAASC,EADe,EACfA,IAEvB,OAAOa,KAAKC,MAAc,IAAPhB,GAAeA,EAAOC,EAAUC,IAAQ,I,uDAGnD,IAAD,EACwBe,KAAKV,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQc,KAAKJ,qBACbC,EAAkCG,KAAKH,kCACvC1B,EAAkB6B,KAAKT,cAE7B,OACE,gCACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAAST,EACTG,gBAAiBA,MAGrB,cAAC,EAAD,CAASR,MAAM,aAAf,SACE,cAAC,EAAD,CACEoB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBU,a,GA9CdI,cCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28cccdab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__29w3V\",\"title\":\"Section_title__3Xqjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton\":\"FeedbackOptions_optionButton__1iiFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItems\":\"Statistics_listItems__1cGsy\"};","import PropTypes from 'prop-types';\nimport s from '../../components/Section/Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","export const BUTTONS_OPTIONS = ['good', 'neutral', 'bad'];\n","import PropTypes from 'prop-types';\nimport s from '../../components/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      type=\"button\"\n      className={s.optionButton}\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option => (\n    <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport s from '../../components/Statistics/Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <ul className={s.listItems}>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive feedback: {positivePercentage} %</li>\n        </ul>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport { BUTTONS_OPTIONS } from './data/buttonsOptions';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleOptions = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n\n    return Math.round((good * 100) / (good + neutral + bad) || 0);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    const onLeaveFeedback = this.handleOptions;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={BUTTONS_OPTIONS}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}